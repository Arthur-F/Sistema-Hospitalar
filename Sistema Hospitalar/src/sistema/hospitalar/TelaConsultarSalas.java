/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema.hospitalar;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gabriel
 */
public class TelaConsultarSalas extends javax.swing.JFrame {

    /**
     * Creates new form TelaEmpresasConv
     */
    public TelaConsultarSalas() {
        initComponents();
        TextField_id.setDocument(new Tamanho(20));
        IniciaTela();
    }
    
    public void PreencherTabela(List<Sala> list){
        DefaultTableModel model = (DefaultTableModel) Table.getModel();
        model.setNumRows(0);
        DBManager dbm = new DBManager();        
        for (Sala sala : list) {
            String sala_t = null;
            String subsetor_t = null;
            sala_t = sala.getNome();
            List<Subsetor> list_subsetor = new ArrayList<>();
            Subsetor sub = new Subsetor();
            sub.setId(sala.getSubsetor_id());
            list_subsetor = dbm.getSubSetor(sub);
            for (Subsetor subsetor : list_subsetor) {
                subsetor_t = subsetor.getNome();
            }
            model.addRow(new String[]{sala_t,subsetor_t});
        }
    }
    
    public void IniciaTela(){
        List<Subsetor> list_subsetor = new ArrayList<>();
        DBManager dbm = new DBManager();
        list_subsetor = dbm.getSubSetor(null);
        ComboBox_subsetor.addItem("");
        for (Subsetor subsetor : list_subsetor) {
            ComboBox_subsetor.addItem(subsetor.getNome());
        }
        List<Sala> list_sala = new ArrayList<>();
        list_sala = dbm.getSala(null);
        this.PreencherTabela(list_sala);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JLabel();
        Label_id = new javax.swing.JLabel();
        TextField_id = new javax.swing.JTextField();
        Label_subsetor = new javax.swing.JLabel();
        ComboBox_subsetor = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        Button_consultar = new javax.swing.JButton();
        Button_cadastrar = new javax.swing.JButton();
        Button_editar = new javax.swing.JButton();
        Button_apagar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        header.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        header.setText("Cadastrar Sala");

        Label_id.setText("Sala");

        Label_subsetor.setText("SubSetor");

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sala", "SubSetor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Table);

        Button_consultar.setText("Consultar");
        Button_consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_consultarActionPerformed(evt);
            }
        });

        Button_cadastrar.setText("Cadastrar");
        Button_cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_cadastrarActionPerformed(evt);
            }
        });

        Button_editar.setText("Editar");
        Button_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_editarActionPerformed(evt);
            }
        });

        Button_apagar.setText("Apagar");
        Button_apagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_apagarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(Label_id))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(Label_subsetor))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(ComboBox_subsetor, javax.swing.GroupLayout.Alignment.LEADING, 0, 108, Short.MAX_VALUE)
                                    .addComponent(TextField_id, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(Button_editar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Button_apagar, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Button_consultar)
                                            .addComponent(Button_cadastrar))))))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Label_id)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TextField_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Label_subsetor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboBox_subsetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(Button_consultar)
                        .addGap(18, 18, 18)
                        .addComponent(Button_cadastrar)
                        .addGap(18, 18, 18)
                        .addComponent(Button_editar)
                        .addGap(18, 18, 18)
                        .addComponent(Button_apagar)
                        .addGap(0, 48, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Button_apagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_apagarActionPerformed
        int linha = Table.getSelectedRow();
        DBManager dbm = new DBManager();
        if(linha >= 0){
            Sala sala = new Sala();
            List<Sala> list = new ArrayList<>();
            sala.setNome(Table.getValueAt(linha,0).toString());
            list = dbm.getSala(sala);
            for (Sala sala1 : list) {
                dbm.deletarSala(sala1);
            }
            list =dbm.getSala(null);
            this.PreencherTabela(list);
            JOptionPane.showMessageDialog(null,"Deleção realizada com sucesso.");
        }else{
            JOptionPane.showMessageDialog(null,"Necessário selecionar uma linha.");
        }
    }//GEN-LAST:event_Button_apagarActionPerformed

    private void Button_consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_consultarActionPerformed
        DefaultTableModel model = (DefaultTableModel) Table.getModel();
        model.setNumRows(0);
        String quarto = null;
        Integer subsetor_id = null;        
        Sala sala = new Sala();
        Subsetor subsetor = new Subsetor();
        List<Sala> list_sala = new ArrayList<>();
        List<Sala> list_aux = new ArrayList<>();
        DBManager dbm = new DBManager();
        if(TextField_id.getText().length() > 0){
            quarto = TextField_id.getText();
        }
        if(!ComboBox_subsetor.getSelectedItem().toString().equals("")){
            subsetor.setNome(ComboBox_subsetor.getSelectedItem().toString());
            List<Subsetor> list_subsetor = new ArrayList<>();
            list_subsetor = dbm.getSubSetor(subsetor);
            for (Subsetor subsetor1 : list_subsetor) {
                subsetor_id = subsetor1.getId();
            }            
        }
        if(quarto != null){
            sala.setNome(quarto);
        }
        if(subsetor_id != null){
            sala.setSubsetor_id(subsetor_id);
        }
        if(quarto != null || subsetor_id != null){
            list_sala = dbm.getSala(sala);
            if(list_sala.size() > 0){
                if(subsetor_id != null){
                    for (Sala sala1 : list_sala) {
                        if(sala1.getSubsetor_id() == subsetor_id ){
                            list_aux.add(sala1);
                        }
                    }
                    if(list_aux.size() > 0){
                        this.PreencherTabela(list_aux);
                    }else{
                       JOptionPane.showMessageDialog(null,"Não foi encontrado nenhuma sala."); 
                    }
                }else{
                    this.PreencherTabela(list_sala);
                }
            }else{
                JOptionPane.showMessageDialog(null,"Não foi encontrado nenhuma sala.");
            }
        }else{
            JOptionPane.showMessageDialog(null,"Necessário informar parametros.");
        }
    }//GEN-LAST:event_Button_consultarActionPerformed

    private void Button_cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_cadastrarActionPerformed
        String nome = null;
        Integer subsetor_id = null;        
        DBManager dbm = new DBManager();
        List<Sala> list = new ArrayList<>();
        if(TextField_id.getText().length() > 0){
            nome = TextField_id.getText();
        }
        if(!ComboBox_subsetor.getSelectedItem().toString().equals("")){
            List<Subsetor> list_sub = new ArrayList<>();
            Subsetor subsetor = new Subsetor();
            subsetor.setNome(ComboBox_subsetor.getSelectedItem().toString());
            list_sub = dbm.getSubSetor(subsetor);
            for (Subsetor subsetor1 : list_sub) {
                subsetor_id = subsetor1.getId();
            }
        }
        if(nome != null){
            List<Sala> list_sala_ex = new ArrayList<>();
            Sala sala_ex = new Sala();
            sala_ex.setNome(nome);
            list_sala_ex = dbm.getSala(sala_ex);
            if(list_sala_ex.size() == 0){
                Sala sala = new Sala();
                sala.setNome(nome);
                sala.setSubsetor_id(subsetor_id);
                dbm.cadastrarSala(sala);
                list = dbm.getSala(null);
                this.PreencherTabela(list);
                JOptionPane.showMessageDialog(null,"Cadastro realizado com sucesso.");
                TextField_id.setText("");
                ComboBox_subsetor.setSelectedIndex(0);
            }else{
                JOptionPane.showMessageDialog(null,"A sala " + nome + " já existe.");
            }
        }else{
            JOptionPane.showMessageDialog(null,"Informar o nome da sala.");
        }
    }//GEN-LAST:event_Button_cadastrarActionPerformed

    private void Button_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_editarActionPerformed
        int linha = Table.getSelectedRow();
        DBManager dbm = new DBManager();
        String subsetor_aux = null;
        if(linha >= 0){
            String nome = Table.getValueAt(linha,0).toString();
            List<Sala> list_aux = new ArrayList<>();
            Sala sl = new Sala();
            sl.setNome(nome);
            list_aux = dbm.getSala(sl);
            Integer quarto = null;
            Integer sub_id = null;
            for (Sala sala : list_aux) {
                quarto = sala.getQuartos();
            }
            if(!ComboBox_subsetor.getSelectedItem().toString().equals("")){
                List<Subsetor> list_sub = new ArrayList<>();
                Subsetor sub = new Subsetor();
                sub.setNome(ComboBox_subsetor.getSelectedItem().toString());
                list_sub = dbm.getSubSetor(sub);
                for (Subsetor subsetor : list_sub) {
                    sub_id = subsetor.getId();
                    subsetor_aux = subsetor.getNome();
                }
            }else if(Table.getValueAt(linha,1) != null){
                List<Subsetor> list_sub = new ArrayList<>();
                Subsetor sub = new Subsetor();
                sub.setNome(Table.getValueAt(linha,1).toString());
                list_sub = dbm.getSubSetor(sub);
                for (Subsetor subsetor : list_sub) {
                    sub_id = subsetor.getId();
                }
            }
            if(TextField_id.getText().length() > 0){
                nome = TextField_id.getText();
            }
            if(subsetor_aux != null || nome != Table.getValueAt(linha,0)){
                Sala sala = new Sala();
                sala.setQuartos(quarto);
                sala.setSubsetor_id(sub_id);
                sala.setNome(nome);
                dbm.AlteraSala(sala);
                List<Sala> list = new ArrayList<>();
                list = dbm.getSala(null);
                this.PreencherTabela(list);
                JOptionPane.showMessageDialog(null,"Alteração realizada com sucesso.");
            }else{
                JOptionPane.showMessageDialog(null,"Informar algum parametro.");
            }
        }else{
            JOptionPane.showMessageDialog(null,"Necessário selecionar uma linha.");
        }
    }//GEN-LAST:event_Button_editarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaConsultarSalas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaConsultarSalas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaConsultarSalas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaConsultarSalas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaConsultarSalas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_apagar;
    private javax.swing.JButton Button_cadastrar;
    private javax.swing.JButton Button_consultar;
    private javax.swing.JButton Button_editar;
    private javax.swing.JComboBox<String> ComboBox_subsetor;
    private javax.swing.JLabel Label_id;
    private javax.swing.JLabel Label_subsetor;
    private javax.swing.JTable Table;
    private javax.swing.JTextField TextField_id;
    private javax.swing.JLabel header;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
