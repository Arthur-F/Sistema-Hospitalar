/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema.hospitalar;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gabriel
 */
public class TelaConsultaPaciente extends javax.swing.JFrame {

    /**
     * Creates new form CadastroSetor
     */
      /**
     * Creates new form TelaCadastrarFuncion√°rios
     */
    public TelaConsultaPaciente() {
        initComponents();
        TextField_cpf.setDocument(new SoNumeros(11));
        TextField_nome.setDocument(new SoLetras(20));
        TextField_rg.setDocument(new SoNumeros(10));
        IniciaTela();
    } 
    
    public void PreencherTabela(List<Paciente> list){
        DefaultTableModel model = (DefaultTableModel) Table.getModel();
        model.setNumRows(0);
        for(Paciente paciente : list) {
            model.addRow(new String[]{paciente.getCPF().toString(), paciente.getNome(), paciente.getRG().toString(),
            paciente.getDataNascimento(), paciente.getCep().toString(), paciente.getComplemento(), paciente.getTelefone().toString()});
        }
    }
    
    public void IniciaTela(){
        List<Paciente> list = new ArrayList<>();
        DBManager dbm = new DBManager();
        list = dbm.getPaciente(null);
        this.PreencherTabela(list);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        Header = new javax.swing.JLabel();
        Label_cpf = new javax.swing.JLabel();
        TextField_cpf = new javax.swing.JTextField();
        Label_nome = new javax.swing.JLabel();
        TextField_nome = new javax.swing.JTextField();
        Label_rg = new javax.swing.JLabel();
        TextField_rg = new javax.swing.JTextField();
        Button_consultar = new javax.swing.JButton();
        Button_cadastrar = new javax.swing.JButton();
        Button_editar = new javax.swing.JButton();
        Button_apagar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        Header.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Header.setText("Consultar Paciente");

        Label_cpf.setText("CPF");

        Label_nome.setText("Nome");

        Label_rg.setText("RG");

        Button_consultar.setText("Consultar");
        Button_consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_consultarActionPerformed(evt);
            }
        });

        Button_cadastrar.setText("Cadastrar");

        Button_editar.setText("Editar");

        Button_apagar.setText("Apagar");
        Button_apagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_apagarActionPerformed(evt);
            }
        });

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CPF", "Nome", "RG", "Data Nascimento", "CEP", "Complementol", "Telefone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(Header, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(TextField_rg, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                    .addComponent(TextField_nome, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TextField_cpf, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(Label_cpf))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(Label_nome))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(Label_rg))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Button_editar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Button_cadastrar)
                                    .addComponent(Button_consultar)
                                    .addComponent(Button_apagar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 772, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Header, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Label_cpf)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextField_cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Label_nome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextField_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Label_rg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextField_rg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Button_consultar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Button_cadastrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Button_editar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Button_apagar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Button_apagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_apagarActionPerformed
        int linha = Table.getSelectedRow();
        if(linha >= 0){
            if(JOptionPane.showConfirmDialog(null,"Tem certeza ?","APAGAR",JOptionPane.YES_NO_OPTION,
                    JOptionPane.WARNING_MESSAGE) == JOptionPane.YES_OPTION){
                DBManager dbm = new DBManager();
                Long cpf = Long.parseLong(Table.getValueAt(linha,0).toString());
                List<Paciente> list = new ArrayList<>();
                Paciente pac = new Paciente();
                pac.setCPF(cpf);
                dbm.removerPaciente(pac);
                JOptionPane.showMessageDialog(null,"Excluido com sucesso!!!");
                list = dbm.getPaciente(null);
                this.PreencherTabela(list);
            }            
        }else{
            JOptionPane.showMessageDialog(null,"Necess√°rio selecionar uma linha");
        }
    }//GEN-LAST:event_Button_apagarActionPerformed

    private void Button_consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_consultarActionPerformed
        Long cpf = null;
        Integer rg = null;
        String nome = null;
        List<Paciente> list = new ArrayList<>();
        List<Paciente> list_aux = new ArrayList<>();
        DBManager dbm = new DBManager();
        if(TextField_cpf.getText().length() > 0){
            cpf = Long.parseLong(TextField_cpf.getText());
        }
        if(TextField_nome.getText().length() > 0){
            nome = TextField_nome.getText();
        }
        if(TextField_rg.getText().length() > 0){
            rg = Integer.parseInt(TextField_rg.getText());
        }
        Paciente pac = new Paciente();
        pac.setCPF(cpf);
        pac.setNome(nome);
        pac.setRG(rg);
        if(cpf != null || rg != null || nome != null){
            DefaultTableModel model = (DefaultTableModel) Table.getModel();
            model.setNumRows(0);
             list = dbm.getPaciente(pac);
             for (Paciente paciente : list) {
                if(nome != null){
                    if(!paciente.getNome().contains(nome)){
                        continue;
                    }
                }
                if(rg !=  null){
                    if(!paciente.getRG().equals(rg)){
                        continue;
                    }
                }
                list_aux.add(paciente);
            }
            if(list_aux.size() > 0){
                TextField_cpf.setText("");
                TextField_nome.setText("");
                TextField_rg.setText("");
                this.PreencherTabela(list_aux);
            }else{
                JOptionPane.showMessageDialog(null,"Nenhum paciente encontrado.","ERRO",JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null,"Informar pelo meno um campo.","ERRO",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_Button_consultarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaConsultaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaConsultaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaConsultaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaConsultaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaConsultaPaciente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_apagar;
    private javax.swing.JButton Button_cadastrar;
    private javax.swing.JButton Button_consultar;
    private javax.swing.JButton Button_editar;
    private javax.swing.JLabel Header;
    private javax.swing.JLabel Label_cpf;
    private javax.swing.JLabel Label_nome;
    private javax.swing.JLabel Label_rg;
    private javax.swing.JTable Table;
    private javax.swing.JTextField TextField_cpf;
    private javax.swing.JTextField TextField_nome;
    private javax.swing.JTextField TextField_rg;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
